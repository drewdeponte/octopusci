#!/usr/bin/env ruby

$LOAD_PATH.unshift File.expand_path(File.dirname(__FILE__) + '/../lib')

APP_NAME = "octopusci-skel"

require 'rubygems'
require 'octopusci/version'
require 'fileutils'
require 'trollop'

if Process.uid != 0
  puts "Must run as root"
  exit 1
end

opts = Trollop::options do
  version "Octopusci v#{Octopusci::Version} (c) Andrew De Ponte"
  banner """Usage: #{APP_NAME} [-c|-v|--version|-h|--help]"""
  opt :create, "Actually create any missing pieces of the Octopusci Skeleton.", :short => "-c", :default => false
end

JOBS_PATH = '/etc/octopusci/jobs'
CONFIG_PATH = '/etc/octopusci/config.yml'
OCTOPUSCI_BUILD_PATH = '/etc/octopusci/jobs/octopusci_rspec_build_local.rb'
WORKSPACE_BASE_PATH = '/var/octopusci'

config_default_content = %Q{
general:
  jobs_path: "/etc/octopusci/jobs"
  workspace_base_path: "#{WORKSPACE_BASE_PATH}"
  base_url: "http://localhost:9998"
  tentactles_user: "octopusci"

http_basic:
  username: admin
  password: admin

smtp:
  notification_from_email: somefrom@example.com
  address: smtp.gmail.com
  port: 587
  authentication: plain
  enable_starttls_auto: true
  user_name: someuser@example.com
  password: somepassword
  raise_delivery_errors: true

projects:
  - { name: octopusci, owner: cyphactor, job_klass: OctopusciRSpecBuildLocal, repo_uri: 'git@github.com:cyphactor/octopusci.git', default_email: devs@example.com }

stages:
  - test_a
}

octopusci_build_default_content = %Q{
class OctopusciRSpecBuildLocal < Octopusci::Job
  def self.run(job_rec)
    context "RSpec Tests (commit)" do
      run_shell_cmd!("bundle install", true)
      run_shell_cmd!("STAGE=\#{job_rec['stage']} bundle exec rspec spec 2>&1")
    end
  end
end
}

if opts[:create]
  FileUtils.mkdir_p(JOBS_PATH)
  puts "1. Ran mkdir -p #{JOBS_PATH}"
  FileUtils.mkdir_p(WORKSPACE_BASE_PATH)
  puts "2. Ran mkdir -p #{WORKSPACE_BASE_PATH}"

  if !File.exists?(CONFIG_PATH)
    File.open(CONFIG_PATH, 'w') do |f|
      f << config_default_content
    end
    puts "3. Created example #{CONFIG_PATH}. Please modify appropriately"
  else
    puts "3. #{CONFIG_PATH} already exists. It has NOT been modified."
    puts "   If you would like to generate the example config again please rename the existing #{CONFIG_PATH} and rerun #{APP_NAME}."
  end

  if !File.exists?(OCTOPUSCI_BUILD_PATH)
    File.open(OCTOPUSCI_BUILD_PATH, 'w') do |f|
      f << octopusci_build_default_content
    end
    puts "4. Created example job definition (#{OCTOPUSCI_BUILD_PATH}). Please use as a starting point for your own jobs."
  else
    puts "4. #{OCTOPUSCI_BUILD_PATH} already exists. It has NOT been modified."
    puts "   If you would like to generate the example job definition again please rename the existing #{OCTOPUSCI_BUILD_PATH} and rerun #{APP_NAME}"
  end
else
  puts "This is a Dry Run\n  No actions have been taken this is simply a description of what would take place if you ran this command with the create option (-c).\n\n"
  puts "  1. mkdir -p #{JOBS_PATH}"
  puts "  2. mkdir -p #{WORKSPACE_BASE_PATH}"
  puts "  3. Create example config (#{CONFIG_PATH}) if one doesn't exist"
  puts "  4. Create example job definition (#{OCTOPUSCI_BUILD_PATH}) if it doesn't exist"
end
